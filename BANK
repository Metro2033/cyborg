pragma solidity ^0.8.0;

contract Bank {
    
    struct Person {
        int account_no;
        int balance;
    }
    
    Person[] arr;
    
    function addPerson(int acc_no, int bal) public {
        Person memory p = Person(acc_no, bal);
        arr.push(p);
    }
    
    function depositMoney(int acc_no, int amt) public returns (string memory) {
        for (uint i = 0; i < arr.length; i++) {
            if (arr[i].account_no == acc_no) {
                arr[i].balance += amt;
                return "success";
            }
        }
        return "failure";
    }
    
    function withdraw(int acc_no, int amt) public returns (string memory) {
        for (uint i = 0; i < arr.length; i++) {
            if (arr[i].account_no == acc_no) {
                if (amt <= arr[i].balance) {
                    arr[i].balance -= amt;
                    return "success";
                } else {
                    return "failure";
                }
            }
        }
        return "failure";
    }
    
    function showBalance(int acc_no) public view returns (int) {
        for (uint i = 0; i < arr.length; i++) {
            if (arr[i].account_no == acc_no) {
                return arr[i].balance;
            }
        }
        return -1;
    }
}
